version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  gymdb:
    image: mysql:latest
    container_name: gym-db
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD_GYM}
      MYSQL_DATABASE: ${MYSQL_DATABASE_GYM}
      MYSQL_USER: ${MYSQL_USER_GYM}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD_GYM}
    volumes:
      - gym_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER_GYM}", "-p${MYSQL_PASSWORD_GYM}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  securitydb:
    image: mysql:latest
    container_name: security-db
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD_SECURITY}
      MYSQL_DATABASE: ${MYSQL_DATABASE_SECURITY}
      MYSQL_USER: ${MYSQL_USER_SECURITY}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD_SECURITY}
    volumes:
      - security_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER_SECURITY}", "-p${MYSQL_PASSWORD_SECURITY}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  gym-app:
    build:
      context: ./gym-app
      dockerfile: Dockerfile
    container_name: gym-service
    ports:
      - "8081:8081"
    depends_on:
      kafka:
        condition: service_started
      gymdb:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: ${MYSQL_URL_GYM}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER_GYM}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD_GYM}

  notification:
    build:
      context: ./notification
      dockerfile: Dockerfile
    container_name: notification
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      SPRING_MAIL_PROPERTIES_MAIL_TRANSPORT_PROTOCOL: "smtp"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
      SPRING_MAIL_PROPERTIES_MAIL_DEBUG: "true"

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8083:8083"
    depends_on:
      securitydb:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: ${MYSQL_URL_SECURITY}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER_SECURITY}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD_SECURITY}
      SECURITY_KEY: ${SECRET_KEY}

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      SECURITY_KEY: ${SECRET_KEY}
      AUTH_SERVICE_URI: http://auth-service:8083
      GYM_SERVICE_URI: http://gym-app:8081

volumes:
  gym_data:
  security_data: